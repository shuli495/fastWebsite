<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com</groupId>
	<artifactId>fastwebsite</artifactId>
	<version>2.0.0</version>

	<packaging>jar</packaging>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>基于fastjava的spring boot项目</description>

	<scm>
		<url>https://github.com/shuli495/fastWebsite</url>
		<connection>scm:git:https://git@github.com/shuli495/fastWebsite.git</connection>
	</scm>

	<licenses>
		<license>
			<name>The MIT License</name>
			<url>https://mit-license.org/</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>wangshuli</name>
			<email>xiaoyao495@163.com</email>
			<organization>free man</organization>
			<organizationUrl>https://github.com/shuli495</organizationUrl>
		</developer>
	</developers>

	<parent>
		<!-- 从本地关联fastjava代码(删除后手动输入)，本地需要添加fastjava代码，与下个依赖二选一 -->
		<!--<groupId>com.fastjavaframework</groupId>-->
		<!--<artifactId>fastjava-parent</artifactId>-->
		<!--<version>2.0.0</version>-->
		<!--<relativePath>../fastjavaParent/pom.xml</relativePath>-->
		<groupId>com.github.shuli495</groupId>
		<artifactId>fastjava-parent</artifactId>
		<version>2.0.0</version>
	</parent>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<properties>
        <quartz.version>2.3.0</quartz.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- 制作镜像 mvn clean package dockerfile:build -->
				<!-- 启动镜像 docker run -d -p 8090:8090 IMAGE_ID -->
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.3</version>
				<configuration>
					<repository>${project.groupId}/${project.artifactId}</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
